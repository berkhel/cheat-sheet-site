import com.amazonaws.auth.profile.ProfileCredentialsProvider;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.transfer.TransferManager;
import com.amazonaws.services.s3.transfer.TransferManagerBuilder;
import com.amazonaws.services.s3.transfer.Transfer;
import com.amazonaws.services.s3.transfer.Upload;
import com.amazonaws.event.ProgressEvent;
import com.amazonaws.event.ProgressListener;

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.5'
        classpath 'com.amazonaws:aws-java-sdk-s3:1.12.772'
    }
}

plugins {
    id 'org.antora' version '1.0.0'
    id 'maven-publish'
}


tasks.register('publishOnS3', Task){
    group = 'publishing'
    description = 'upload the Antora site on S3'
    doFirst {
        AmazonS3 s3Client = AmazonS3ClientBuilder.standard()
                .withRegion("eu-west-1")
                .withCredentials(new ProfileCredentialsProvider())
                .build();

        TransferManager tm = TransferManagerBuilder.standard()
                .withS3Client(s3Client)
                .build();

        Transfer transfer = tm.uploadDirectory(
                "mimmo-site",
                "cheat-sheet-site",
                new File("$buildDir/site"),
                true
        );

        transfer.addProgressListener(new ProgressListener() {
            @Override
            public void progressChanged(ProgressEvent progressEvent) {
                System.out.println("Transferred bytes: " + progressEvent.getBytesTransferred())
            }
        })

        try {
            transfer.waitForCompletion();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }finally{
            tm.shutdownNow();
        }
    }

    dependsOn('antora')
}

antora {
    options = [clean: true, fetch: true, stacktrace: true]
}
